{"version":3,"sources":["webpack:///src/components/contribute/Contribute.tsx","webpack:///./.linaria-cache/src/components/contribute/Contribute.linaria.css"],"names":["Contribute","SIGNAL_ART_URL_PATTERN","TAGS_PATTERN","initialValues","signalArtUrl","source","tags","isNsfw","isOriginal","isAnimated","undefined","validators","async","matches","RegExp","exec","packId","packKey","R","getStickerPackDirectory","getStickerPack","test","SyntaxHighlighter","ContributeComponent","hasBeenSubmitted","setHasBeenSubmitted","React","ymlBlob","setYmlBlob","openPrButton","onSubmitClick","gitHubLink","href","title","pullRequestLink","stickerPackGuideLink","yamlLink","editStickersYmlLink","twitterLink","className","onSubmit","values","Error","tag","key","nsfw","original","animated","indent","behavior","validateOnChange","validateOnBlur","isSubmitting","noValidate","cx","errors","htmlFor","type","id","name","validate","placeholder","value","checked","disabled","onClick","language","style","customStyle","margin","ref"],"mappings":"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","file":"contribute-37d36b39e3bafb7e26d4.js","sourcesContent":["import { Formik, Form, Field, ErrorMessage, FieldValidator } from 'formik';\nimport { cx } from 'linaria';\nimport { styled } from 'linaria/react';\nimport * as R from 'ramda';\nimport React from 'react';\nimport { BsBoxArrowUpRight } from 'react-icons/bs';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/esm/prism-light';\nimport yamlLanguage from 'react-syntax-highlighter/dist/esm/languages/prism/yaml';\nimport syntaxTheme from 'react-syntax-highlighter/dist/esm/styles/prism/base16-ateliersulphurpool.light';\nimport yaml from 'js-yaml';\n\nimport ExternalLink from 'components/general/ExternalLink';\nimport { getStickerPackDirectory, getStickerPack } from 'lib/stickers';\n\n\n/**\n * Test pack:\n * https://signal.art/addstickers/#pack_id=b2e52b07dfb0af614436508c51aa24eb&pack_key=66224990b3e956ad4a735830df8cd071275afeae79db9797e57d99314daffc77\n */\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst Contribute = styled.div`\n  /**\n   * Ensures error feedback containers are always visible (even if empty) so\n   * that controls do not jump around as they move between valid and invalid\n   * states.\n   */\n  & .invalid-feedback {\n    display: block;\n  }\n\n  & legend {\n    font-size: 1em;\n  }\n\n  & pre[class*=\"language-\"] {\n    margin: 0;\n  }\n`;\n\n\n// ----- Types -----------------------------------------------------------------\n\nexport interface FormValues {\n  signalArtUrl: string;\n  source: string;\n  tags: string;\n  isNsfw?: 'true' | 'false';\n  isOriginal?: 'true' | 'false';\n  isAnimated?: 'true' | 'false';\n}\n\n\n// ----- Locals ----------------------------------------------------------------\n\n/**\n * Regular expression used to validate signal.art URLs for sticker packs.\n */\nconst SIGNAL_ART_URL_PATTERN = /^https:\\/\\/signal.art\\/addstickers\\/#pack_id=([\\dA-Za-z]+)&pack_key=([\\dA-Za-z]+)$/g;\n\n/**\n * Regular expression used to validate lists of tags.\n */\nconst TAGS_PATTERN = /^(?:([\\w ]+))+(?:, ?([\\w ]+))*$/g;\n\n/**\n * Initial values for the form.\n */\nconst initialValues: FormValues = {\n  signalArtUrl: '',\n  source: '',\n  tags: '',\n  isNsfw: undefined,\n  isOriginal: undefined,\n  isAnimated: undefined\n};\n\n/**\n * Validators for each field in our form.\n */\nconst validators: Record<string, FieldValidator> = {\n  signalArtUrl: async (signalArtUrl: string) => {\n    if (!signalArtUrl) {\n      return 'This field is required.';\n    }\n\n    const matches = new RegExp(SIGNAL_ART_URL_PATTERN).exec(signalArtUrl);\n\n    if (!matches) {\n      return 'Invalid signal.art URL.';\n    }\n\n    const [, packId, packKey] = matches;\n\n    if (R.find(R.pathEq(['meta', 'id'], packId), await getStickerPackDirectory())) {\n      return 'A sticker pack with that ID already exists in the directory.';\n    }\n\n    try {\n      await getStickerPack(packId, packKey);\n    } catch {\n      return 'Invalid sticker pack. Please check the pack ID and key.';\n    }\n  },\n  source: (source: string) => {\n    if (source && source.length > 320) {\n      return 'This field must be no longer than 320 characters.';\n    }\n  },\n  tags: (tags: string) => {\n    if (tags !== '' && !new RegExp(TAGS_PATTERN).test(tags)) {\n      return 'Invalid value. Tags must be a list of comma-delimited strings.';\n    }\n  },\n  isNsfw: (isNsfw?: boolean) => {\n    if (isNsfw === undefined) {\n      return 'This field is required.';\n    }\n  },\n  isOriginal: (isOriginal?: boolean) => {\n    if (isOriginal === undefined) {\n      return 'This field is required.';\n    }\n  },\n  isAnimated: (isAnimated?: boolean) => {\n    if (isAnimated === undefined) {\n      return 'This field is required.';\n    }\n  }\n};\n\n\n// ----- Component -------------------------------------------------------------\n\nSyntaxHighlighter.registerLanguage('yaml', yamlLanguage);\n\nconst ContributeComponent: React.FunctionComponent = () => {\n  const [hasBeenSubmitted, setHasBeenSubmitted] = React.useState(false);\n  const [ymlBlob, setYmlBlob] = React.useState('');\n  const openPrButton = React.useRef<HTMLAnchorElement>(null);\n\n\n  /**\n   * Sets 'hasBeenSubmitted' when the Submit button is clicked. We need this\n   * because Formik will not call our onSubmit function when the submit button\n   * is clicked _but_ validation fails. This makes sense, but because we want to\n   * change the way validation errors are presented to the user after the first\n   * submit attempt, we need to track \"attempts\" separately.\n   */\n  const onSubmitClick = () => {\n    setHasBeenSubmitted(true);\n    setYmlBlob('');\n  };\n\n\n  /**\n   * Called when the form is submitted and has passed validation.\n   */\n  const onSubmit: any = (values: FormValues) => {\n    const matches = new RegExp(SIGNAL_ART_URL_PATTERN).exec(values.signalArtUrl);\n\n    if (!matches) {\n      throw new Error('Unable to extract pack ID and pack key from signal.art URL.');\n    }\n\n    const [, packId, packKey] = matches;\n\n    const tags = R.uniq(values.tags\n      .split(',')\n      .map(tag => tag.trim())\n      .filter(tag => tag.length));\n\n    setYmlBlob(yaml.safeDump({\n      [packId]: {\n        key: packKey,\n        source: values.source,\n        tags,\n        nsfw: values.isNsfw === 'true' ? true : false,\n        original: values.isOriginal === 'true' ? true : false,\n        animated: values.isAnimated === 'true' ? true : false\n      }\n    }, {\n      indent: 2\n    }).trim());\n\n    if (openPrButton.current) {\n      openPrButton.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return true;\n  };\n\n\n  // ----- Render --------------------------------------------------------------\n\n  const gitHubLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://github.com\"\n      title=\"GitHub\"\n    >\n      GitHub\n    </ExternalLink>\n  ), []);\n\n  const pullRequestLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\"\n      title=\"Pull Request\"\n    >\n      Pull Request\n    </ExternalLink>\n  ), []);\n\n  const stickerPackGuideLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://support.signal.org/hc/articles/360031836512-Stickers#h_c2a0a45b-862f-4d12-9ab1-d9a6844062ca\"\n      title=\"Sticker Creator Guidelines\"\n    >\n      Sticker Creator Guidelines\n    </ExternalLink>\n  ), []);\n\n  const yamlLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://en.wikipedia.org/wiki/YAML\"\n      title=\"YAML\"\n    >\n      YAML\n    </ExternalLink>\n  ), []);\n\n  const editStickersYmlLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://github.com/signalstickers/signalstickers/edit/master/stickers.yml\"\n      title=\"Signal Stickers repository\"\n    >\n      Signal Stickers repository\n    </ExternalLink>\n  ), []);\n\n  const twitterLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://twitter.com/signalstickers\"\n      title=\"Twitter\"\n    >\n      @signalstickers\n    </ExternalLink>\n  ), []);\n\n  return (\n    <Contribute className=\"my-4 p-lg-3 px-lg-4\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1 className=\"mb-4\">Contribute</h1>\n          <p className=\"mt-lg-3 mb-4\">\n            To get your sticker pack listed in the Signal Stickers directory:\n          </p>\n          <ol>\n            <li className=\"mb-2\">\n              If you don't already have one, create a {gitHubLink} account. You will need one in order\n              to open a {pullRequestLink} against the Signal Stickers repository.\n            </li>\n            <li className=\"mb-2\">\n              Create a sticker pack using the Signal desktop app. For help, see Signal's {stickerPackGuideLink}.\n              Be sure to save the <code>signal.art</code> URL for your pack. If you are creating a\n              sticker pack derived from an existing one on another platform or from someone else's\n              artwork, please consider using the original author's name in the <strong>Author</strong> field\n              when creating your pack in Signal, and consider adding their website, Twitter handle, or\n              other online presence to the <strong>Source</strong> field below.\n            </li>\n            <li className=\"mb-2\">\n              Open a Pull Request in the Signal Stickers GitHub repository updating <code>stickers.yml</code> to\n              to include an entry for your sticker pack.\n            </li>\n          </ol>\n          <p>\n            The form below will guide you through the process of generating the {yamlLink} entry for\n            your pack that you will need to add to <code>stickers.yml</code>.\n          </p>\n          <p>\n            Alternatively, you can send us the YAML via a Twitter message at {twitterLink}.\n            Please only use this if you have no way to open a Pull Request on GitHub!\n          </p>\n        </div>\n      </div>\n      <hr className=\"pt-3 pb-2\" />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10 offset-md-1\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validateOnChange={hasBeenSubmitted}\n            validateOnBlur={hasBeenSubmitted}\n          >{({ values, errors, isValidating, isSubmitting }) => (\n            <Form noValidate>\n\n              {/* [Field] Signal.art Url */}\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <label className={cx('col-12', errors.signalArtUrl && 'text-danger')} htmlFor=\"signal-art-url\">\n                    Signal.art URL:\n                    <Field\n                      type=\"text\"\n                      id=\"signal-art-url\"\n                      name=\"signalArtUrl\"\n                      validate={validators.signalArtUrl}\n                      className={cx('form-control', 'mt-2', errors.signalArtUrl && 'is-invalid')}\n                      placeholder=\"https://signal.art/addstickers/#pack_id=<your pack id>&pack_key=<your pack key>\"\n                    />\n                    <div className=\"invalid-feedback\">\n                      <ErrorMessage name=\"signalArtUrl\" />&nbsp;\n                    </div>\n                  </label>\n                </div>\n              </div>\n\n              {/* [Field] Source */}\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <label className={cx('col-12', errors.source && 'text-danger')} htmlFor=\"source\">\n                    (Optional) Source:\n                    <Field\n                      type=\"text\"\n                      id=\"source\"\n                      name=\"source\"\n                      validate={validators.source}\n                      className={cx('form-control', 'mt-2', errors.source && 'is-invalid')}\n                    />\n                    <small className=\"form-text text-muted\">Original author, website, company, etc.</small>\n                    <div className=\"invalid-feedback\">\n                      <ErrorMessage name=\"source\" />&nbsp;\n                    </div>\n                  </label>\n                </div>\n              </div>\n\n              {/* [Field] Tags */}\n              <div className=\"form-group mb-4\">\n                <div className=\"form-row\">\n                  <label className={cx('col-12', errors.tags && 'text-danger')} htmlFor=\"tags\">\n                    (Optional) Tags:\n                    <Field\n                      type=\"text\"\n                      id=\"tags\"\n                      name=\"tags\"\n                      validate={validators.tags}\n                      className={cx('form-control', 'mt-2', errors.tags && 'is-invalid')}\n                    />\n                    <small className=\"form-text text-muted\">Comma-separated list of words.</small>\n                    <div className=\"invalid-feedback\">\n                      <ErrorMessage name=\"tags\" />&nbsp;\n                    </div>\n                  </label>\n                </div>\n              </div>\n\n              {/* [Field] NSFW */}\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <legend className={cx('col-12', 'mb-2', errors.isNsfw && 'text-danger')}>\n                    Is your sticker pack <ExternalLink href=\"https://www.urbandictionary.com/define.php?term=NSFW\" title=\"NSFW\">NSFW</ExternalLink>?\n                  </legend>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"col-12 mb-1\">\n                    <div className=\"custom-control custom-radio\">\n                      <Field\n                        type=\"radio\"\n                        id=\"is-nsfw-true\"\n                        name=\"isNsfw\"\n                        validate={validators.isNsfw}\n                        className={cx('custom-control-input', errors.isNsfw && 'is-invalid')}\n                        value=\"true\"\n                        checked={values.isNsfw === 'true'}\n                      />\n                      <label className=\"custom-control-label\" htmlFor=\"is-nsfw-true\">\n                        Yes\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"col-12 mb-1\">\n                    <div className=\"custom-control custom-radio\">\n                      <Field\n                        type=\"radio\"\n                        id=\"is-nsfw-false\"\n                        name=\"isNsfw\"\n                        validate={validators.isNsfw}\n                        className={cx('custom-control-input', errors.isNsfw && 'is-invalid')}\n                        value=\"false\"\n                        checked={values.isNsfw === 'false'}\n                      />\n                      <label className=\"custom-control-label\" htmlFor=\"is-nsfw-false\">No</label>\n                    </div>\n                    <div className=\"invalid-feedback\">\n                      <ErrorMessage name=\"isNsfw\" />&nbsp;\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* [Field] Original */}\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <legend className={cx('col-12', 'mb-2', errors.isOriginal && 'text-danger')}>\n                    Is your pack original? Did the author of the pack draw it exclusively for Signal, from original artworks?\n                  </legend>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"col-12 mb-1\">\n                    <div className=\"custom-control custom-radio\">\n                      <Field\n                        type=\"radio\"\n                        id=\"is-original-true\"\n                        name=\"isOriginal\"\n                        validate={validators.isOriginal}\n                        className={cx('custom-control-input', errors.isOriginal && 'is-invalid')}\n                        value=\"true\"\n                        checked={values.isOriginal === 'true'}\n                      />\n                      <label className=\"custom-control-label\" htmlFor=\"is-original-true\">\n                        Yes\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"col-12 mb-1\">\n                    <div className=\"custom-control custom-radio\">\n                      <Field\n                        type=\"radio\"\n                        id=\"is-original-false\"\n                        name=\"isOriginal\"\n                        validate={validators.isOriginal}\n                        className={cx('custom-control-input', errors.isOriginal && 'is-invalid')}\n                        value=\"false\"\n                        checked={values.isOriginal === 'false'}\n                      />\n                      <label className=\"custom-control-label\" htmlFor=\"is-original-false\">No</label>\n                    </div>\n                    <div className=\"invalid-feedback\">\n                      <ErrorMessage name=\"isOriginal\" />&nbsp;\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* [Field] Animated */}\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <legend className={cx('col-12', 'mb-2', errors.isAnimated && 'text-danger')}>\n                    Is your pack animated?\n                  </legend>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"col-12 mb-1\">\n                    <div className=\"custom-control custom-radio\">\n                      <Field\n                        type=\"radio\"\n                        id=\"is-animated-true\"\n                        name=\"isAnimated\"\n                        validate={validators.isAnimated}\n                        className={cx('custom-control-input', errors.isAnimated && 'is-invalid')}\n                        value=\"true\"\n                        checked={values.isAnimated === 'true'}\n                      />\n                      <label className=\"custom-control-label\" htmlFor=\"is-animated-true\">\n                        Yes\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"col-12 mb-1\">\n                    <div className=\"custom-control custom-radio\">\n                      <Field\n                        type=\"radio\"\n                        id=\"is-animated-false\"\n                        name=\"isAnimated\"\n                        validate={validators.isAnimated}\n                        className={cx('custom-control-input', errors.isAnimated && 'is-invalid')}\n                        value=\"false\"\n                        checked={values.isAnimated === 'false'}\n                      />\n                      <label className=\"custom-control-label\" htmlFor=\"is-animated-false\">No</label>\n                    </div>\n                    <div className=\"invalid-feedback\">\n                      <ErrorMessage name=\"isAnimated\" />&nbsp;\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* [Control] Submit */}\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <div className=\"col-12\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary btn-block btn-lg\"\n                      disabled={isSubmitting || isValidating}\n                      onClick={onSubmitClick}\n                    >\n                      Generate YAML\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n            </Form>\n          )}\n          </Formik>\n        </div>\n      </div>\n\n      {/* Rendered YML Output */}\n      {ymlBlob ?\n        <>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <hr />\n              <p className=\"mt-4 mb-4\">\n                Great! Below is the YAML entry you will need to add to the end of <code>stickers.yml</code> in\n                the {editStickersYmlLink}:\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-10 offset-md-1\">\n              <div className=\"card\">\n                <SyntaxHighlighter\n                  language=\"yaml\"\n                  style={syntaxTheme}\n                  customStyle={{ margin: '0' }}\n                >\n                  {ymlBlob}\n                </SyntaxHighlighter>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"col-12 col-md-10 offset-md-1\">\n              <ExternalLink\n                title=\"Open a Pull Request\"\n                href=\"https://github.com/signalstickers/signalstickers/edit/master/stickers.yml\"\n                className=\"btn btn-success btn-block btn-lg\"\n                ref={openPrButton}\n              >\n                Edit the file and open a Pull Request\n                <BsBoxArrowUpRight className=\"ml-2\" />\n              </ExternalLink>\n            </div>\n          </div>\n        </> :\n        null\n      }\n    </Contribute>\n  );\n};\n\n\nexport default ContributeComponent;\n","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}