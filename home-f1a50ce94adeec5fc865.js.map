{"version":3,"sources":["webpack:///src/components/home/Home.tsx","webpack:///./src/hooks/use-query.ts","webpack:///./src/hooks/use-update-url.ts","webpack:///src/components/home/SearchInput.tsx","webpack:///./.linaria-cache/src/components/home/SearchInput.linaria.css","webpack:///src/components/home/SearchResults.tsx","webpack:///src/components/home/StickerPackPreviewCard.tsx","webpack:///./.linaria-cache/src/components/home/StickerPackPreviewCard.linaria.css","webpack:///./.linaria-cache/src/components/home/SearchResults.linaria.css","webpack:///./.linaria-cache/src/components/home/Home.linaria.css"],"names":["StyledHome","HomeComponent","setSearchQuery","React","query","useQuery","updateUrl","useUpdateUrl","searchQueryFromUrl","searchQuery","stickerPackLink","href","title","twitterLink","className","queryString","parse","useLocation","search","history","useHistory","newValues","currentUrl","parseUrl","location","pathname","newUrl","stringifyUrl","R","replace","SearchInput","SearchPrepend","SearchHelp","SearchClear","MiniTag","MiniAnimated","SearchInputComponent","searchQueryInputValue","setSearchQueryInputValue","searchHelpRef","suggestedTags","debouncedSetSearchQuery","debounceFn","wait","onSearchQueryInputChange","value","event","onSuggestionClick","searcher","attributeQueries","tag","textContent","animated","handleInputFocus","handleInputBlur","setTimeout","clearSearchResults","tagsFragment","type","key","onClick","data-suggestion-type","onBlur","onChange","onFocus","aria-label","autoComplete","autoCapitalize","autoCorrect","spellCheck","ref","to","searchResults","StickerPackList","StickerPackListComponent","cursor","setCursor","renderedSearchResults","setRenderedSearchResults","loadMore","newCursor","result","id","stickerPack","onEnter","bottomOffset","StickerPackPreviewCard","props","StickerPackPreviewCardComponent","cover","setCover","manifest","useAsyncEffect","async","meta","coverImage","getConvertedStickerInPack","err","console","message","original","nsfw","src","alt"],"mappings":"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","file":"home-f1a50ce94adeec5fc865.js","sourcesContent":["import {styled} from 'linaria/react';\nimport React from 'react';\n\nimport Context from 'contexts/StickersContext';\nimport useQuery from 'hooks/use-query';\nimport useUpdateUrl from 'hooks/use-update-url';\n\nimport ExternalLink from 'components/general/ExternalLink';\nimport {SEARCH_QUERY_PARAM} from 'etc/constants';\nimport {bp} from 'lib/utils';\n\nimport SearchInput from './SearchInput';\nimport StickerPackList from './SearchResults';\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst StyledHome = styled.div`\n  @media ${bp('sm', 'max')} {\n    & .intro {\n      font-size: 14px;\n    }\n  }\n`;\n\n\n// ----- Home ------------------------------------------------------------------\n\nconst HomeComponent: React.FunctionComponent = () => {\n  const {searchQuery, setSearchQuery} = React.useContext(Context);\n  const query = useQuery();\n  const updateUrl = useUpdateUrl();\n\n\n  /**\n   * Perform a one-time URL-to-state sync when the component mounts.\n   */\n  React.useEffect(() => {\n    const searchQueryFromUrl = query[SEARCH_QUERY_PARAM] ? query[SEARCH_QUERY_PARAM] : null;\n\n    if (typeof searchQueryFromUrl === 'string') {\n      setSearchQuery(searchQueryFromUrl);\n    }\n  }, []);\n\n\n  /**\n   * Perform a state-to-URL sync when the search query changes.\n   */\n  React.useEffect(() => {\n    updateUrl({\n      query: {\n        // Coerce empty strings to null to cause the query param to be\n        // removed from the URL when the search query is cleared.\n        [SEARCH_QUERY_PARAM]: searchQuery || null\n      }\n    });\n  }, [searchQuery]);\n\n\n  const stickerPackLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://support.signal.org/hc/en-us/articles/360031836512-Stickers\"\n      title=\"Stickers - Signal Support\"\n    >\n      sticker packs\n    </ExternalLink>\n  ), []);\n\n\n  const twitterLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://twitter.com/signalstickers\"\n      title=\"Twitter\"\n    >\n      @signalstickers\n    </ExternalLink>\n  ), []);\n\n\n  return (\n    <StyledHome>\n      <div className=\"row\">\n        <div className=\"col-12 mt-4 mb-1 mb-md-3 pt-lg-2\">\n          <p className=\"intro\">\n            Welcome to Signal Stickers, the unofficial directory for Signal {stickerPackLink}.\n            You can filter packs by title, author, or tags. Follow {twitterLink} on Twitter to stay\n            tuned for new packs!\n          </p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <SearchInput />\n        </div>\n      </div>\n      <StickerPackList />\n    </StyledHome>\n  );\n};\n\n\nexport default HomeComponent;\n","import queryString from 'query-string';\nimport {useLocation} from 'react-router-dom';\n\n\n/**\n * Custom hook for introspecting URL query parameters.\n *\n * Example usage:\n *\n * const query = useQuery();\n * query.get('foo');\n */\nexport default function useQuery() {\n  return queryString.parse(useLocation().search);\n}\n","import queryString, {ParsedUrl} from 'query-string';\nimport * as R from 'ramda';\nimport {useHistory} from 'react-router-dom';\n\n\n/**\n * Provided an object representing a parsed URL, updates the URL with the\n * provided values. Will not trigger a page reload.\n *\n * @example\n *\n * const updateUrl = useUpdateUrl();\n *\n * // Add/update the 'foo' query parameter in the URL:\n * updateUrl({query: {foo: 'bar'}});\n */\nexport default function useUpdateUrl() {\n  const history = useHistory();\n\n  return (newValues: Partial<ParsedUrl>) => {\n    const currentUrl = queryString.parseUrl(history.location.pathname);\n    const newUrl = queryString.stringifyUrl(R.mergeDeepRight(currentUrl, newValues) as ParsedUrl);\n    history.replace(newUrl);\n  };\n}\n","import debounceFn from 'debounce-fn';\nimport {styled} from 'linaria/react';\nimport React from 'react';\nimport {HashLink} from 'react-router-hash-link';\nimport {BsSearch, BsX} from 'react-icons/bs';\nimport {FaInfoCircle} from 'react-icons/fa';\n\nimport StickersContext from 'contexts/StickersContext';\nimport {DANGER_SATURATED, GRAY_DARKER_2} from 'etc/colors';\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst SearchInput = styled.div`\n  position: relative;\n\n  & input {\n    padding-left: 42px;\n    padding-right: 72px;\n  }\n\n  & input:focus,\n  & button:active:focus {\n    box-shadow: none;\n    outline: none;\n  }\n`;\n\nconst SearchPrepend = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 18px;\n  height: 100%;\n  left: 0;\n  padding-left: 14px;\n  position:absolute;\n  top: 0;\n  transition: color 0.2s ease-in-out;\n  z-index: 3;\n`;\n\nconst SearchHelp = styled.div`\n  align-items: center;\n  display: flex;\n  height: 100%;\n  opacity: 0;\n  padding: 3px 4px 0px 4px;\n  pointer-events: none;\n  position: absolute;\n  right: 50px;\n  top: -2px;\n  transition: opacity 0.2s ease-in-out;\n  transform: translateY(2px);\n  z-index: 3;\n\n  & a {\n    opacity: 0.3;\n    transition: opacity 0.15s ease-in-out;\n\n    &:hover {\n      opacity: 0.5;\n    }\n  }\n\n  & .icon {\n    font-size: 18px;\n  }\n`;\n\nconst SearchClear = styled.div`\n  position:absolute;\n  display: flex;\n  align-items: center;\n  height: 100%;\n  right: 0;\n  top: 0;\n  padding-right: 4px;\n  z-index: 3;\n\n  & button {\n    font-size: 20px;\n\n    & .icon {\n      opacity: 0.8;\n      color: ${DANGER_SATURATED};\n      transition: opacity 0.2s ease-in-out, transform 0.1s ease;\n      transform: scale(1.5);\n    }\n\n    &:hover .icon {\n      opacity: 1;\n      transform: scale(1.6);\n    }\n\n    &:active {\n      box-shadow: none;\n      outline: none;\n\n      & .icon {\n        transform: scale(1.5);\n      }\n    }\n\n    &:focus {\n      box-shadow: none;\n      outline: none;\n    }\n  }\n\n  .theme-dark & {\n    & .icon {\n      opacity: 0.6;\n    }\n  }\n`;\n\nconst MiniTag = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--primary);\n  color: var(--primary);\n  font-size: 12px;\n  font-weight: 700;\n  padding: 0 5px;\n\n  &:hover {\n    color: var(--primary);\n\n    &:active {\n      border-color: var(--primary) !important;\n    }\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 0.12rem rgba(var(--primary), 0.25);\n  }\n\n  .theme-dark & {\n    background-color: ${GRAY_DARKER_2};\n  }\n`;\n\nconst MiniAnimated = styled(MiniTag)`\n  border: 1px solid var(--orange);\n  color: var(--orange);\n`;\n\n// ----- Component -------------------------------------------------------------\n\nconst SearchInputComponent: React.FunctionComponent = () => {\n  const {searcher, searchQuery, searchResults, setSearchQuery} = React.useContext(StickersContext);\n  const [searchQueryInputValue, setSearchQueryInputValue] = React.useState('');\n  const searchHelpRef = React.useRef<HTMLDivElement>(null);\n  const suggestedTags = ['cute', 'privacy', 'meme', 'for children'];\n\n\n  /**\n   * Allows us to de-bounce calls to setSearchQuery to avoid making excessive\n   * re-renders when the input value is updated.\n   */\n  const debouncedSetSearchQuery = debounceFn(setSearchQuery, {wait: 250});\n\n\n  /**\n   * [Effect] Context state -> local/input state.\n   */\n  React.useEffect(() => {\n    if (searchQuery) {\n      setSearchQueryInputValue(searchQuery);\n    }\n  }, [searchQuery]);\n\n\n  /**\n   * [Event Handler] Input state -> local state.\n   */\n  const onSearchQueryInputChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = event.target;\n    setSearchQueryInputValue(value);\n  }, [\n    setSearchQueryInputValue\n  ]);\n\n\n  /**\n   * [Effect] Local state -> context state (debounced).\n   */\n  React.useEffect(() => {\n    debouncedSetSearchQuery.cancel();\n    debouncedSetSearchQuery(searchQueryInputValue);\n\n    return () => {\n      debouncedSetSearchQuery.cancel();\n    };\n  }, [\n    debouncedSetSearchQuery,\n    searchQueryInputValue\n  ]);\n\n\n  /**\n   * [Event Handler] Sets the search query when a tag or the 'animated'\n   * suggestion is clicked.\n   */\n  const onSuggestionClick = React.useCallback((event: React.SyntheticEvent) => {\n    if (searcher && event.currentTarget.textContent) {\n      if (event.currentTarget.getAttribute('data-suggestion-type') === 'tag') {\n        setSearchQuery(searcher.buildQueryString({\n          attributeQueries: [{\n            tag: event.currentTarget.textContent\n          }]\n        }));\n      } else if (event.currentTarget.getAttribute('data-suggestion-type') === 'animated') {\n        setSearchQuery(searcher.buildQueryString({\n          attributeQueries: [{\n            animated: 'true'\n          }]\n        }));\n      }\n    }\n  }, [\n    searcher,\n    setSearchQuery\n  ]);\n\n\n  /**\n   * [Event Handler] Show the search help icon when the input element is\n   * focused.\n   */\n  const handleInputFocus = React.useCallback(() => {\n    if (!searchHelpRef.current) {\n      return;\n    }\n\n    searchHelpRef.current.style.opacity = '1';\n    searchHelpRef.current.style.pointerEvents = 'initial';\n  }, [\n    searchHelpRef\n  ]);\n\n\n  /**\n   * [Event Handler] Hide the search help icon when the input element is\n   * blurred. We also disable pointer events to prevent clicking on the element\n   * when it is not visible.\n   */\n  const handleInputBlur = React.useCallback(() => {\n    if (!searchHelpRef.current) {\n      return;\n    }\n\n    searchHelpRef.current.style.opacity = '0';\n\n    // Allows a click on the search help icon to proceed before disabling\n    // pointer events.\n    setTimeout(() => {\n      if (!searchHelpRef.current) {\n        return;\n      }\n\n      searchHelpRef.current.style.pointerEvents = 'none';\n    }, 250);\n  }, [\n    searchHelpRef\n  ]);\n\n\n  /**\n   * [Event Handler] Clears our context's search query state.\n   */\n  const clearSearchResults = React.useCallback((event: React.SyntheticEvent) => {\n    event.preventDefault();\n    setSearchQueryInputValue('');\n    setSearchQuery('');\n  }, [\n    setSearchQueryInputValue,\n    setSearchQuery\n  ]);\n\n\n  /**\n   * [Effect] When the component mounts, set the search input's value to the\n   * current search query from our context.\n   */\n  React.useEffect(() => {\n    if (searchQuery) {\n      setSearchQueryInputValue(searchQuery);\n    }\n  }, [searchQuery]);\n\n\n  /**\n   * [Effect] When the search query is updated, call our de-bounced update\n   * function.\n   */\n  React.useEffect(() => {\n    debouncedSetSearchQuery.cancel();\n    debouncedSetSearchQuery(searchQueryInputValue);\n\n    return () => {\n      debouncedSetSearchQuery.cancel();\n    };\n  }, [\n    debouncedSetSearchQuery,\n    searchQueryInputValue\n  ]);\n\n\n  /**\n   * [Memo] JSX fragment containing the set of suggested tags.\n   */\n  const tagsFragment = React.useMemo(() => suggestedTags.map(tag => (\n    <MiniTag\n      type=\"button\"\n      key={tag}\n      className=\"btn mr-1\"\n      onClick={onSuggestionClick}\n      data-suggestion-type=\"tag\"\n    >\n      {tag}\n    </MiniTag>\n  )), [suggestedTags]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  return (\n    <SearchInput className=\"form-group mb-4 mb-md-5\">\n      <div className=\"mb-1 position-relative\">\n        <SearchPrepend>\n          <BsSearch />\n        </SearchPrepend>\n        <input\n          type=\"text\"\n          key=\"search\"\n          className=\"form-control form-control-lg\"\n          onBlur={handleInputBlur}\n          onChange={onSearchQueryInputChange}\n          onFocus={handleInputFocus}\n          value={searchQueryInputValue}\n          title=\"Search\"\n          aria-label=\"search\"\n          autoComplete=\"off\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          spellCheck=\"false\"\n        />\n        <SearchHelp ref={searchHelpRef}>\n          <HashLink to=\"/about#searching\" title=\"Search Help\">\n            <FaInfoCircle className=\"text-muted\" />\n          </HashLink>\n        </SearchHelp>\n        <SearchClear>\n          <button\n            type=\"button\"\n            className=\"btn btn-link border-0\"\n            title=\"Clear Search Results\"\n            onClick={clearSearchResults}\n          >\n            <BsX />\n          </button>\n        </SearchClear>\n      </div>\n      <div className=\"d-flex justify-content-between\">\n        <div>\n          <small>\n            Lost? Why not start with...{' '}\n          </small>\n          <br className=\"d-inline d-md-none\" />\n          <MiniAnimated\n            type=\"button\"\n            className=\"btn mr-1\"\n            onClick={onSuggestionClick}\n            data-suggestion-type=\"animated\"\n          >\n            animated\n          </MiniAnimated>\n          {tagsFragment}\n        </div>\n        <div className=\"text-muted\">\n          <small>\n            {searchResults?.length || 0} {searchResults.length === 1 ? 'result' : 'results'}\n          </small>\n        </div>\n      </div>\n    </SearchInput>\n  );\n};\n\n\nexport default SearchInputComponent;\n","// extracted by mini-css-extract-plugin\nexport {};","import {styled} from 'linaria/react';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Waypoint} from 'react-waypoint';\nimport * as R from 'ramda';\n\nimport StickersContext from 'contexts/StickersContext';\n\nimport StickerPackPreviewCard from './StickerPackPreviewCard';\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst StickerPackList = styled.div`\n  & a {\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\n\n// ----- Component -------------------------------------------------------------\n\n/**\n * How many items we will load each time loadMore() is called.\n */\nconst PAGE_SIZE = 64;\n\n\nconst StickerPackListComponent = () => {\n  const {searchResults} = React.useContext(StickersContext);\n  // Used by Waypoint to persist the component across re-renders.\n  const [cursor, setCursor] = React.useState(0);\n  // Subset of total search results that have been rendered.\n  const [renderedSearchResults, setRenderedSearchResults] = React.useState<typeof searchResults>([]);\n\n\n  /**\n   * Adds PAGE_SIZE items from searchResults to renderedSearchResults and\n   * updates the cursor.\n   */\n  const loadMore = React.useCallback(() => {\n    // If we have rendered all search results, bail.\n    if (renderedSearchResults.length >= searchResults.length) {\n      return;\n    }\n\n    const newCursor = cursor + PAGE_SIZE;\n    setCursor(newCursor);\n    setRenderedSearchResults(R.take(newCursor, searchResults));\n  }, [\n    cursor,\n    searchResults,\n    renderedSearchResults\n  ]);\n\n\n  /**\n   * [Effect] When the list of search results is updated, re-set our rendered\n   * search results and cursor.\n   */\n  React.useLayoutEffect(() => {\n    setCursor(0);\n    setRenderedSearchResults([]);\n    loadMore();\n  }, [searchResults]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  return (\n    <StickerPackList className=\"row\">\n      {renderedSearchResults.map(result => (\n        <div className=\"col-6 col-md-4 col-lg-3 mb-4\" key={result.item.meta.id}>\n          <Link to={`/pack/${result.item.meta.id}`}>\n            <StickerPackPreviewCard stickerPack={result.item} />\n          </Link>\n        </div>\n      ))}\n      <Waypoint key={cursor} onEnter={loadMore} bottomOffset=\"-500px\" />\n    </StickerPackList>\n  );\n};\n\n\nexport default StickerPackListComponent;\n","import {styled} from 'linaria/react';\nimport {rgba} from 'polished';\nimport React from 'react';\nimport useAsyncEffect from 'use-async-effect';\n\nimport {GRAY_DARKER_2, GRAY_DARKER} from 'etc/colors';\nimport {StickerPackPartial} from 'etc/types';\nimport {getConvertedStickerInPack} from 'lib/stickers';\n\n\n// ----- Props -----------------------------------------------------------------\n\nexport interface Props {\n  stickerPack: StickerPackPartial;\n}\n\ninterface StickerPackPreviewCardProps extends React.ComponentProps<'div'> {\n  nsfw?: boolean;\n  original?: boolean;\n  animated?: boolean;\n}\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst StickerPackPreviewCard = styled.div<StickerPackPreviewCardProps>`\n  background-color: transparent;\n  text-align: center;\n  transition: box-shadow 0.15s ease-in-out;\n  overflow: hidden;\n\n  &::before, &::after {\n    color: white;\n    font-size: 12px;\n    padding: 3px 6px 3px 3px;\n    position: absolute;\n    top: 13px;\n  }\n\n  &::before {\n    content: 'Original';\n    background-color: var(--primary);\n    border-bottom-right-radius: 4px;\n    border-top-right-radius: 4px;\n    color: var(--white);\n    display: ${props => props.original ? 'block' : 'none'};\n    font-size: 12px;\n    left: 0;\n    left: O;\n    padding: 3px 6px;\n    position: absolute;\n    top: 13px;\n  }\n\n  &::after {\n    content: 'Animated';\n    background-color: var(--orange);\n    border-bottom-left-radius: 4px;\n    border-top-left-radius: 4px;\n    display: ${props => props.animated ? 'block' : 'none'};\n    padding: 3px 6px;\n    right: 0;\n  }\n\n  & .card-img-top {\n    filter: ${props => props.nsfw ? 'blur(4px)' : 'none'};\n    height: 72px;\n    margin-bottom: 24px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 24px;\n    object-fit: contain;\n    transition: transform 0.15s ease-in;\n    width: 72px;\n  }\n\n  & .card-header {\n    border-bottom: none;\n    border-top: 1px solid rgba(0, 0, 0, 0.125);\n    font-size: 14px;\n    overflow: hidden;\n    position: relative;\n    white-space: nowrap;\n\n    &::after {\n      content: ' ';\n      border-bottom-right-radius: 4px;\n      bottom: 0;\n      display: block;\n      pointer-events: none;\n      position: absolute;\n      right: 0;\n      top: 0;\n      width: 15%;\n    }\n  }\n\n  &:hover {\n    * {\n      color: black;\n    }\n\n    & .card-img-top {\n      transform: scale(1.1)\n    }\n\n    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);\n  }\n\n  .theme-light & {\n    &::before, &::after {\n      box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.2);\n    }\n\n    & .card-header {\n      color: var(--dark);\n\n      &::after {\n        /* This color is a one-off (even in Bootstrap) used for card headers. */\n        background: linear-gradient(90deg, rgba(247, 247, 247, 0) 0%, rgba(247, 247, 247, 1) 50%);\n      }\n    }\n  }\n\n  .theme-dark & {\n    background-color: var(--gray-dark);\n    border-color: ${GRAY_DARKER};\n    color: var(--light);\n    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.15);\n\n    &:hover {\n      box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.25);\n    }\n\n    & .card-header {\n      background-color: ${GRAY_DARKER_2};\n      border-color: ${GRAY_DARKER};\n      color: var(--light);\n\n      &::after {\n        background: linear-gradient(90deg, ${rgba(GRAY_DARKER_2, 0)} 0%, ${rgba(GRAY_DARKER_2, 1)} 50%);\n      }\n    }\n  }\n`;\n\n\n// ----- Component -------------------------------------------------------------\n\nconst StickerPackPreviewCardComponent: React.FunctionComponent<Props> = props => {\n  const [cover, setCover] = React.useState<string | undefined>();\n  const {meta, manifest} = props.stickerPack;\n\n\n  /**\n   * [Effect] Loads a sticker pack's cover image when the component mounts.\n   */\n  useAsyncEffect(async () => {\n    try {\n      if (meta.id !== undefined) {\n        const coverImage = await getConvertedStickerInPack(meta.id, meta.key, manifest.cover.id);\n        setCover(coverImage);\n      }\n    } catch (err) {\n      console.error(`[StickerPackPreviewCard::Effect::GetCover] ${err.message}`);\n    }\n  }, [\n    meta.id,\n    meta.key,\n    manifest.cover.id\n  ]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  const title =`${manifest.title}${meta.nsfw ? ' (NSFW)' : ''}`;\n\n  return (\n    <StickerPackPreviewCard\n      className=\"card\"\n      original={meta.original}\n      animated={meta.animated}\n      nsfw={meta.nsfw}\n      aria-label={title}\n    >\n      {cover ?\n        <img className=\"card-img-top\" src={cover} alt=\"Cover\" /> :\n        <div className=\"card-img-top\">{' '}</div>\n      }\n      <div className=\"card-header\">\n        {title}\n      </div>\n    </StickerPackPreviewCard>\n  );\n};\n\n\nexport default StickerPackPreviewCardComponent;\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}