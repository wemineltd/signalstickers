(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{633:function(e,t,a){"use strict";a.r(t),a.d(t,"WebpMachineError",(function(){return o})),a.d(t,"defaultDetectWebpImage",(function(){return c})),a.d(t,"WebpMachine",(function(){return i}));var s=a(628);class n extends Error{}var r=a(180);class o extends Error{}const c=e=>/\.webp.*$/i.test(e.src);class i{constructor({webp:e=new s.Webp,webpSupport:t=Object(r.a)(),detectWebpImage:a=c}={}){this.busy=!1,this.cache={},this.webp=e,this.webpSupport=t,this.detectWebpImage=a}async decode(e){if(this.busy)throw new o("cannot decode when already busy");this.busy=!0;try{await new Promise(e=>requestAnimationFrame(e));const t=document.createElement("canvas");return this.webp.setCanvas(t),this.webp.webpToSdl(e,e.length),this.busy=!1,t.toDataURL()}catch(e){throw this.busy=!1,e.name=o.name,e.message="failed to decode webp image: "+e.message,e}}async polyfillImage(e){if(await this.webpSupport)return;const{src:t}=e;if(this.detectWebpImage(e)){if(this.cache[t])return void(e.src=this.cache[t]);try{const a=await async function(e){return new Promise((t,a)=>{const s=new XMLHttpRequest;s.open("GET",e),s.responseType="arraybuffer";const r=()=>{a(new n(`failed to load binary data, code "${s.status}" from "${e}"`))};s.onerror=r,s.onreadystatechange=()=>{4==s.readyState&&(200==s.status?t(new Uint8Array(s.response)):r())},s.send()})}(t),s=await this.decode(a);e.src=this.cache[t]=s}catch(e){throw e.name=o.name,e.message=`failed to polyfill image "${t}": ${e.message}`,e}}}async polyfillDocument({document:e=window.document}={}){if(await this.webpSupport)return null;for(const t of Array.from(e.querySelectorAll("img")))try{await this.polyfillImage(t)}catch(e){throw e.name=o.name,e.message=`webp image polyfill failed for url "${t.src}": ${e}`,e}}}}}]);
//# sourceMappingURL=webp-hero-machine-e139d3d3f958f1643775.js.map